library(dplyr)
ionCount <- read.csv("ionCount.csv", header=FALSE, colClasses = c("numeric","numeric","numeric"))
colnames(ionCount) <- c("G2","Count","Energy(ev)")
ionCount <- ionCount %>% group_by(G2) %>% summarise(counts = sum(Count))
plot(ionCount, type = "l", xlab="Energy (eV)", ylab="Ion counts"); grid()
derivative <- c()
library(dplyr)
ionCount <- read.csv("ionCount.csv", header=FALSE, colClasses = c("numeric","numeric","numeric"))
colnames(ionCount) <- c("G2","Count","Energy(ev)")
ionCount <- ionCount %>% group_by(G2) %>% summarise(counts = sum(Count))
plot(ionCount, type = "l", xlab="Energy (eV)", ylab="Ion counts"); grid()
derivative <- c()
n <- dim(ionCount)[1]-1
for (i in 2:n)
{
numerator <- with(ionCount, -(counts[i+1]-counts[i-1]) )
denominator <- with(ionCount, (G2[i+1]-G2[i-1]) )
if (denominator < 0) data <- 0
else data <- numerator/denominator
derivative <- rbind(derivative,data)
}
energyStep <- ionCount$G2[2]-ionCount$G2[1]
energy <- seq(2,n,1)*energyStep
plot(derivative ~ energy, type="l",xlab="Energy (eV)", ylab="IEDF"); grid()
derivative
max(derivative)
library(dplyr)
ionCount <- read.csv("ionCount.csv", header=FALSE, colClasses = c("numeric","numeric","numeric"))
colnames(ionCount) <- c("G2","Count","Energy(ev)")
ionCount <- ionCount %>% group_by(G2) %>% summarise(counts = sum(Count))
plot(ionCount, type = "l", xlab="Energy (eV)", ylab="Ion counts"); grid()
derivative <- c()
n <- dim(ionCount)[1]-1
for (i in 2:n)
{
numerator <- with(ionCount, -(counts[i+1]-counts[i-1]) )
denominator <- with(ionCount, (G2[i+1]-G2[i-1]) )
if (denominator < 0) data <- 0
else data <- numerator/denominator
derivative <- rbind(derivative,data)
}
energyStep <- ionCount$G2[2]-ionCount$G2[1]
energy <- seq(2,n,1)*energyStep
plot(derivative ~ energy, type="l",xlab="Energy (eV)", ylab="IEDF"); grid()
max(derivative)
library(dplyr)
ionCount <- read.csv("ionCount.csv", header=FALSE, colClasses = c("numeric","numeric","numeric"))
colnames(ionCount) <- c("G2","Count","Energy(ev)")
ionCount <- ionCount %>% group_by(G2) %>% summarise(counts = sum(Count))
plot(ionCount, type = "l", xlab="Energy (eV)", ylab="Ion counts"); grid()
derivative <- c()
n <- dim(ionCount)[1]-1
for (i in 2:n)
{
numerator <- with(ionCount, -(counts[i+1]-counts[i-1]) )
denominator <- with(ionCount, (G2[i+1]-G2[i-1]) )
if (denominator < 0) data <- 0
else data <- numerator/denominator
derivative <- rbind(derivative,data)
}
derivative <- derivative/max(derivative)
energyStep <- ionCount$G2[2]-ionCount$G2[1]
energy <- seq(2,n,1)*energyStep
plot(derivative ~ energy, type="l",xlab="Energy (eV)", ylab="IEDF"); grid()
library(dplyr)
ionCount <- read.csv("ionCount.csv", header=FALSE, colClasses = c("numeric","numeric","numeric"))
colnames(ionCount) <- c("G2","Count","Energy(ev)")
ionCount <- ionCount %>% group_by(G2) %>% summarise(counts = sum(Count))
plot(ionCount, type = "l", xlab="Energy (eV)", ylab="Ion counts"); grid()
derivative <- c()
n <- dim(ionCount)[1]-1
for (i in 2:n)
{
numerator <- with(ionCount, -(counts[i+1]-counts[i-1]) )
denominator <- with(ionCount, (G2[i+1]-G2[i-1]) )
if (denominator < 0) data <- 0
else data <- numerator/denominator
derivative <- rbind(derivative,data)
}
derivative <- derivative/max(derivative)
energyStep <- ionCount$G2[2]-ionCount$G2[1]
energy <- seq(2,n,1)*energyStep
plot(derivative ~ energy, type="l",xlab="Energy (eV)", ylab="IEDF"); grid()
library(dplyr)
ionCount <- read.csv("ionCount.csv", header=FALSE, colClasses = c("numeric","numeric","numeric"))
colnames(ionCount) <- c("G2","Count","Energy(ev)")
ionCount <- ionCount %>% group_by(G2) %>% summarise(counts = sum(Count))
plot(ionCount, type = "l", xlab="Energy (eV)", ylab="Ion counts"); grid()
derivative <- c()
n <- dim(ionCount)[1]-1
for (i in 2:n)
{
numerator <- with(ionCount, -(counts[i+1]-counts[i-1]) )
denominator <- with(ionCount, (G2[i+1]-G2[i-1]) )
if (denominator < 0) data <- 0
else data <- numerator/denominator
derivative <- rbind(derivative,data)
}
derivative <- derivative/max(derivative)
energyStep <- ionCount$G2[2]-ionCount$G2[1]
energy <- seq(2,n,1)*energyStep
plot(derivative ~ energy, type="l",xlab="Energy (eV)", ylab="IEDF"); grid()
#ION ENERGY DISTRIBUTION AS SEEN AT G0
ionEnergy <- read.csv("ionEnergy.csv", header=FALSE, colClasses = c("numeric","numeric"))
colnames(ionEnergy) <- c("eVz", "eV")
hist(as.vector(ionEnergy$eVz), breaks=n+1,
xlab="Energy (eV)",
ylab="Frequency",
main = "Energy (from vz only)", xlim=c(0,1500)); grid()
hist(as.vector(ionEnergy$eV), breaks=n+1,
xlab="Energy (eV)",
ylab="Frequency",
main = "Total Energy", xlim=c(0,1500)); grid()
hist_obj <- hist(as.vector(ionEnergy$eVz))
hist_obj$counts
hist_obj <- hist(as.vector(ionEnergy$eVz), breaks = n+1)
hist_obj$counts
plot(hist_obj$counts)
plot(hist_obj$counts, type="l")
hist_obj <- hist(as.vector(ionEnergy$eVz), breaks = n+1)
data <- hist_obj$counts
data
dim(data)
data
length(data)
length(data)
?hist
diff(hist_obj$breaks)
hist_obj <- hist(as.vector(ionEnergy$eVz), breaks = n+1)
data <- hist_obj$counts
diff(hist_obj$breaks)
#Alternative to ION ENERGY DISTRIBUTION AS SEEN AT G0
hist_obj <- hist(as.vector(ionEnergy$eVz), breaks = n+1)
IEDFcounts <- c(hist_obj$counts,0)
diff(hist_obj$breaks)
length(data)
plot(IEDFcounts)
plot(IEDFcounts, type="l")
#Alternative to ION ENERGY DISTRIBUTION AS SEEN AT G0
hist_obj <- hist(as.vector(ionEnergy$eVz), breaks = n+1)
IEDFcounts <- c(hist_obj$counts,0) / max(IEDFcounts)
diff(hist_obj$breaks)
length(data)
plot(IEDFcounts, type="l")
plot(IEDFcounts, type="l"); grid()
hist_obj$breaks
energy <- hist_obj$breaks
energy <- hist_obj$breaks
energy
energyBins[length(energyBins)]
energyBins <- hist_obj$breaks
energyBins[length(energyBins)]
library(dplyr)
ionCount <- read.csv("ionCount.csv", header=FALSE, colClasses = c("numeric","numeric","numeric"))
colnames(ionCount) <- c("G2","Count","Energy(ev)")
ionCount <- ionCount %>% group_by(G2) %>% summarise(counts = sum(Count))
plot(ionCount, type = "l", xlab="Energy (eV)", ylab="Ion counts"); grid()
derivative <- c()
n <- dim(ionCount)[1]-1
for (i in 2:n)
{
numerator <- with(ionCount, -(counts[i+1]-counts[i-1]) )
denominator <- with(ionCount, (G2[i+1]-G2[i-1]) )
if (denominator < 0) data <- 0
else data <- numerator/denominator
derivative <- rbind(derivative,data)
}
derivative <- derivative/max(derivative)
energyStep <- ionCount$G2[2]-ionCount$G2[1]
energy <- seq(2,n,1)*energyStep
plot(derivative ~ energy, type="l",xlab="Energy (eV)", ylab="IEDF"); grid()
#Alternative to ION ENERGY DISTRIBUTION AS SEEN AT G0
hist_obj <- hist(as.vector(ionEnergy$eVz), breaks = n+1)
IEDFcounts <- c(hist_obj$counts,0) / max(IEDFcounts)
energyBins <- hist_obj$breaks
energyBins[length(energyBins)]
energyBins[length(energyBins)]+energyStep
#Alternative to ION ENERGY DISTRIBUTION AS SEEN AT G0
hist_obj <- hist(as.vector(ionEnergy$eVz), breaks = n+1)
IEDFcounts <- c(hist_obj$counts,0) / max(IEDFcounts)
energyBins <- hist_obj$breaks
energyBins <- c(energyBins, energyBins[length(energyBins)]+energyStep)
energyBins
energyBins <- energyBins + energyStep/2
energyBins
plot(IEDFcounts ~ energyBins, type="l"); grid()
#Alternative to ION ENERGY DISTRIBUTION AS SEEN AT G0
hist_obj <- hist(as.vector(ionEnergy$eVz), breaks = n+1)
IEDFcounts <- c(hist_obj$counts,0) / max(IEDFcounts)
energyBins <- hist_obj$breaks
#Alternative to ION ENERGY DISTRIBUTION AS SEEN AT G0
hist_obj <- hist(as.vector(ionEnergy$eVz), breaks = n+1)
IEDFcounts <- c(hist_obj$counts,0) / max(IEDFcounts)
energyBins <- hist_obj$breaks
energyBins <- energyBins[1:length(energyBins)-1]
energyBins <- energyBins + energyStep/2
plot(IEDFcounts ~ energyBins, type="l"); grid()
energyBins
#Alternative to ION ENERGY DISTRIBUTION AS SEEN AT G0
hist_obj <- hist(as.vector(ionEnergy$eVz), breaks = n+1)
IEDFcounts <- c(hist_obj$counts,0) / max(IEDFcounts)
energyBins <- hist_obj$breaks
energyBins <- energyBins[1:length(energyBins)]
energyBins <- energyBins + energyStep/2
plot(IEDFcounts ~ energyBins, type="l"); grid()
#Alternative to ION ENERGY DISTRIBUTION AS SEEN AT G0
hist_obj <- hist(as.vector(ionEnergy$eVz), breaks = n+1)
IEDFcounts <- c(hist_obj$counts,0) / max(IEDFcounts)
#Alternative to ION ENERGY DISTRIBUTION AS SEEN AT G0
hist_obj <- hist(as.vector(ionEnergy$eVz), breaks = n+1)
IEDFcounts <- c(hist_obj$counts,0) / max(hist_obj$counts)
energyBins <- hist_obj$breaks
energyBins <- energyBins[1:length(energyBins)]
#Alternative to ION ENERGY DISTRIBUTION AS SEEN AT G0
hist_obj <- hist(as.vector(ionEnergy$eVz), breaks = n+1)
IEDFcounts <- c(hist_obj$counts,0) / max(hist_obj$counts)
energyBins <- hist_obj$breaks
energyBins <- energyBins + energyStep/2
plot(IEDFcounts ~ energyBins, type="l"); grid()
plot(derivative ~ energy, type="l",xlab="Energy (eV)", ylab="IEDF")
lines(IEDFcounts ~ energyBins, type="l"); grid()
#Alternative to ION ENERGY DISTRIBUTION AS SEEN AT G0
hist_obj <- hist(as.vector(ionEnergy$eVz), breaks = n+1)
IEDFcounts <- c(hist_obj$counts,0) / max(hist_obj$counts)
energyBins <- hist_obj$breaks
energyBins <- energyBins + energyStep
plot(derivative ~ energy, type="l",xlab="Energy (eV)", ylab="IEDF")
lines(IEDFcounts ~ energyBins, type="l"); grid()
#Alternative to ION ENERGY DISTRIBUTION AS SEEN AT G0
hist_obj <- hist(as.vector(ionEnergy$eVz), breaks = n+1)
IEDFcounts <- c(hist_obj$counts,0) / max(hist_obj$counts)
energyBins <- hist_obj$breaks
energyBins <- energyBins + energyStep/2
energyBins
plot(derivative ~ energy, type="l",xlab="Energy (eV)", ylab="IEDF")
lines(IEDFcounts ~ energyBins, type="l"); grid()
plot(derivative ~ energy, type="l",xlab="Energy (eV)", ylab="IEDF", col="blue")
lines(IEDFcounts ~ energyBins, type="l", col="red"); grid()
plot(derivative ~ energy, type="l",
xlab="Energy (eV)", ylab="IEDF", col="blue",
xlim = c(0,1500))
lines(IEDFcounts ~ energyBins, type="l", col="red"); grid()
plot(derivative ~ energy, type="l",
xlab="Energy (eV)", ylab="IEDF", col="blue",
main = "Blue: C / Red: G0"
xlim = c(0,1500))
lines(IEDFcounts ~ energyBins, type="l", col="red"); grid()
plot(derivative ~ energy, type="l",
xlab="Energy (eV)", ylab="IEDF", col="blue",
main = "Blue: C  /  Red: G0",
xlim = c(0,1500))
lines(IEDFcounts ~ energyBins, type="l", col="red"); grid()
library(dplyr)
ionCount <- read.csv("ionCount.csv", header=FALSE, colClasses = c("numeric","numeric","numeric"))
colnames(ionCount) <- c("G2","Count","Energy(ev)")
ionCount <- ionCount %>% group_by(G2) %>% summarise(counts = sum(Count))
plot(ionCount, type = "l", xlab="Energy (eV)", ylab="Ion counts"); grid()
derivative <- c()
n <- dim(ionCount)[1]-1
for (i in 2:n)
{
numerator <- with(ionCount, -(counts[i+1]-counts[i-1]) )
denominator <- with(ionCount, (G2[i+1]-G2[i-1]) )
if (denominator < 0) data <- 0
else data <- numerator/denominator
derivative <- rbind(derivative,data)
}
derivative <- derivative/max(derivative)
energyStep <- ionCount$G2[2]-ionCount$G2[1]
energy <- seq(2,n,1)*energyStep
plot(derivative ~ energy, type="l",xlab="Energy (eV)", ylab="IEDF"); grid()
#ION ENERGY DISTRIBUTION AS SEEN AT G0
ionEnergy <- read.csv("ionEnergy.csv", header=FALSE, colClasses = c("numeric","numeric"))
colnames(ionEnergy) <- c("eVz", "eV")
hist(as.vector(ionEnergy$eVz), breaks=n+1,
xlab="Energy (eV)",
ylab="Frequency",
main = "Energy (from vz only)", xlim=c(0,1500)); grid()
hist(as.vector(ionEnergy$eV), breaks=n+1,
xlab="Energy (eV)",
ylab="Frequency",
main = "Total Energy", xlim=c(0,1500)); grid()
#Alternative to ION ENERGY DISTRIBUTION AS SEEN AT G0
hist_obj <- hist(as.vector(ionEnergy$eVz), breaks = n+1)
IEDFcounts <- c(hist_obj$counts,0) / max(hist_obj$counts)
energyBins <- hist_obj$breaks
energyBins <- energyBins + energyStep/2
# PLOT IEDF AT G0 AND COLLECTOR
plot(derivative ~ energy, type="l",
xlab="Energy (eV)", ylab="IEDF", col="blue",
main = "Blue: C  /  Red: G0",
xlim = c(0,1500))
lines(IEDFcounts ~ energyBins, type="l", col="red"); grid()
markdown::rended("IEDF.R")
markdown::render("IEDF.R")
rmarkdown::render("IEDF.R")
